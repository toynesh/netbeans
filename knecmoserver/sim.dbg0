08:11:53 main: main() trace group 3 deactivated
08:11:53 main: main() trace group 6 deactivated
08:11:53 main: main() trace group 8 deactivated
08:11:53 main: main() trace group 18 deactivated
08:11:53    main: DeliveryInfoSender.start() entered
08:11:53    DlvrInfoSender-1: DeliveryInfoSender.run() entered
08:11:53    main: DeliveryInfoSender.start() exited
08:11:53    main: main() going to parse from input stream
08:11:53    main: main() got comment line # This is an example of user definition file used to authenticate bounding ESME.
08:11:53    main: main() got comment line # User consists from attributes, each attribute is on one line,
08:11:53    main: main() got comment line # each attribute has key and value; users are delimited by one or more
08:11:53    main: main() got comment line # consecutive blank lines - next user is started by the next attribute after
08:11:53    main: main() got comment line # first occurence of blank line.
08:11:53    main: main() got comment line # Comment line can appear anywhere and it's ignored => it can't delimit
08:11:53    main: main() got comment line # two users.
08:11:53    main: main() got comment line # Format of attribute is <name>"="<value>
08:11:53    main: main() got comment line #
08:11:53    main: main() got comment line # The name and password attributes are compulsory for each user definition
08:11:53    main: main() got comment line # as they are compared to the system_id and password parameters
08:11:53    main: main() got comment line # in the incoming bound PDU.
08:11:53    main: main() got comment line #
08:11:53    main: main() got comment line # Note that timeout and bound attributes below are just exampples
08:11:53    main: main() got comment line # of additional attributes and aren't really used by the simulator :-)
08:11:53    main: main() got comment line # (future expansion?)
08:11:53    main: main() got comment line # Also note that whitespaces aren't removed from neither attribute name
08:11:53    main: main() got comment line # and it's value, i.e. "name=peter" and "name= peter" define two different users,
08:11:53    main: main() got comment line # "peter" and " peter".
08:11:53    main: main() got empty line
08:11:53    main: main() got empty line
08:11:53    main: main() got comment line # Pavel can bound for unlimited time as any type
08:11:53    main: main() going to parse attribute name=pavel
08:11:53    main: main() going to parse attribute password=dfsew
08:11:53    main: main() going to parse attribute timeout=unlimited
08:11:53    main: main() got empty line
08:11:53    main: main() finished record, adding to table
08:11:53    main: main() got empty line
08:11:53    main: main() got comment line # Jorge has time limited to 10, then the connection is dropped
08:11:53    main: main() got comment line # if enquire is unsuccessfull
08:11:53    main: main() got comment line # Also, Jorge can connect only as triansmitter or receiver, he can't
08:11:53    main: main() got comment line # connect as transciever
08:11:53    main: main() got empty line
08:11:53    main: main() going to parse attribute name=jorge
08:11:53    main: main() going to parse attribute password=prtgljrg
08:11:53    main: main() got comment line # And this timeout is in minutes, bad luck, jorge %^)
08:11:53    main: main() going to parse attribute timout=5
08:11:53    main: main() going to parse attribute bound=t,r
08:11:53    main: main() got empty line
08:11:53    main: main() finished record, adding to table
08:11:53    main: main() got comment line # And another users
08:11:53    main: main() going to parse attribute name=hugo
08:11:53    main: main() going to parse attribute password=ggoohu
08:11:53    main: main() got empty line
08:11:53    main: main() finished record, adding to table
08:11:53    main: main() got comment line # that's all folks
08:11:53    main: main() going to parse attribute name=DAMIEN
08:11:53    main: main() going to parse attribute password=neimad
08:11:53    main: main() got empty line
08:11:53    main: main() finished record, adding to table
08:11:53    main: main() going to start SMSCListener on port 8090
08:11:53       main: TCPIPConnection.open entered
08:11:53       main: TCPIPConnection.open listening tcp/ip on port 8090 (7)
08:11:53       main: TCPIPConnection.open exited
08:11:53    main: main() starting listener in separate thread.
08:11:53    main: main() listener started in separate thread.
08:11:53    Thread-1: SMSCListenerImpl.run of SMSCListener on port 8090 entered
08:12:01    Thread-1: SMSCListenerImpl.run of SMSCListener on port 8090 SMSCListener accepted a connection on port 8090
08:12:01    Thread-1: SMSCListenerImpl.run of SMSCListener on port 8090 SMSCListener launched a session on the accepted connection.
08:12:01    Thread-2: SMSCSessionImpl.SMSCSession run() entered
08:12:01    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession starting receiver
08:12:01    Thread-2: SMSCSessionImpl.SMSCSession run() Receiver starting (1)
08:12:01       Thread-2: Receiver.start() entered
08:12:02    Receiver-1: Receiver.run() entered
08:12:02       Thread-2: Receiver.start() exited
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() Receiver started (1)
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession going to receive a PDU
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() receivePDU: Going to receive response. (1)
08:12:02    Receiver-1: Receiver.run() totally read 37 bytes from socket (7)
08:12:02    Receiver-1: Receiver.run() trying to create pdu from unprocessed buffer (1)
08:12:02    Receiver-1: Receiver.run() PDU.setData() parsing header 00000025000000010000000000000001 (5)
08:12:02    Receiver-1: Receiver.run() PDU.setData() parsing body 706176656c00646673657700736d70700034000000 (5)
08:12:02    Receiver-1: Receiver.run() received complete pdu(bindreq: (pdu: 37 1 0 1) pavel dfsew smpp 52 (addrrang: 0 0 ) )  (1)
08:12:02    Receiver-1: Receiver.run() there is 0 bytes left in unprocessed buffer (1)
08:12:02    Receiver-1: Receiver.run() Receiver.receiveAsync(): PDU received, processing (bindreq: (pdu: 37 1 0 1) pavel dfsew smpp 52 (addrrang: 0 0 ) )  (1)
08:12:02    Receiver-1: Receiver.run() receiver enqueuing pdu. (1)
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() Got pdu (bindreq: (pdu: 37 1 0 1) pavel dfsew smpp 52 (addrrang: 0 0 ) )  (1)
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession got request (bindreq: (pdu: 37 1 0 1) pavel dfsew smpp 52 (addrrang: 0 0 ) ) 
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SimulatorPDUProcessor.clientRequest() (bindreq: (pdu: 37 1 0 1) pavel dfsew smpp 52 (addrrang: 0 0 ) ) 
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() system id pavel authenticated
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SimulatorPDUProcessor.serverResponse() (bindresp: (pdu: 0 80000001 0 1) Smsc Simulator) 
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession going to send pdu over transmitter
08:12:02       Thread-2: Transmitter.send entered
08:12:02       Thread-2: Transmitter.send going to send pdu's data over connection (7)
08:12:02       Thread-2: Transmitter.send PDU.getData() build up data 0000001f800000010000000000000001536d73632053696d756c61746f7200 (5)
08:12:02          Thread-2: TCPIPConnection.send entered
08:12:02          Thread-2: TCPIPConnection.send sent 31 bytes to 127.0.0.1 on port 39050 (7)
08:12:02          Thread-2: TCPIPConnection.send exited
08:12:02       Thread-2: Transmitter.send successfully sent pdu's data over connection (7)
08:12:02       Thread-2: Transmitter.send exited
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession pdu sent over transmitter
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession going to receive a PDU
08:12:02    Thread-2: SMSCSessionImpl.SMSCSession run() receivePDU: Going to receive response. (1)
08:12:11    Receiver-1: Receiver.run() totally read 16 bytes from socket (7)
08:12:11    Receiver-1: Receiver.run() trying to create pdu from unprocessed buffer (1)
08:12:11    Receiver-1: Receiver.run() PDU.setData() parsing header 00000010000000150000000000000002 (5)
08:12:11    Receiver-1: Receiver.run() PDU.setData() no data for body (5)
08:12:11    Receiver-1: Receiver.run() received complete pdu(enquirelink: (pdu: 16 15 0 2) )  (1)
08:12:11    Receiver-1: Receiver.run() there is 0 bytes left in unprocessed buffer (1)
08:12:11    Receiver-1: Receiver.run() Receiver.receiveAsync(): PDU received, processing (enquirelink: (pdu: 16 15 0 2) )  (1)
08:12:11    Receiver-1: Receiver.run() receiver enqueuing pdu. (1)
08:12:11    Thread-2: SMSCSessionImpl.SMSCSession run() Got pdu (enquirelink: (pdu: 16 15 0 2) )  (1)
08:12:11    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession got request (enquirelink: (pdu: 16 15 0 2) ) 
08:12:11    Thread-2: SMSCSessionImpl.SMSCSession run() SimulatorPDUProcessor.clientRequest() (enquirelink: (pdu: 16 15 0 2) ) 
08:12:12    Thread-2: SMSCSessionImpl.SMSCSession run() SimulatorPDUProcessor.serverResponse() (enquirelink_resp: (pdu: 0 80000015 0 2) ) 
08:12:12    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession going to send pdu over transmitter
08:12:12       Thread-2: Transmitter.send entered
08:12:12       Thread-2: Transmitter.send going to send pdu's data over connection (7)
08:12:12       Thread-2: Transmitter.send PDU.getData() build up data 00000010800000150000000000000002 (5)
08:12:12          Thread-2: TCPIPConnection.send entered
08:12:12          Thread-2: TCPIPConnection.send sent 16 bytes to 127.0.0.1 on port 39050 (7)
08:12:12          Thread-2: TCPIPConnection.send exited
08:12:12       Thread-2: Transmitter.send successfully sent pdu's data over connection (7)
08:12:12       Thread-2: Transmitter.send exited
08:12:12    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession pdu sent over transmitter
08:12:12    Thread-2: SMSCSessionImpl.SMSCSession run() SMSCSession going to receive a PDU
08:12:12    Thread-2: SMSCSessionImpl.SMSCSession run() receivePDU: Going to receive response. (1)
